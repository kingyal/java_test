<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--   当我们代码中的属性名与数据库字段不一致时，也可通过resultMap进行映射，而不用as关键字     -->
<mapper namespace="com.kingyal.usemybatis.dao.UserDao">
    <sql id="query_user_by_id">
        select id,username,password,gender,regist_time as resistTime
        from t_user
    </sql>
    <resultMap id="user_resultMap" type="User">
        <id column="id" property="id"></id>
        <result column="username" property="username"></result>
        <result column="password" property="password"></result>
        <result column="gender" property="gender"></result>
        <result column="regist_time" property="resistTime"></result>
    </resultMap>
    <select id="queryUserIdByMap" resultMap="user_resultMap">
        select id,username,password,gender,regist_time
        from t_user
        where id=#{param1}
    </select>

    <select id="queryUser" resultType="User">
        <include refid="query_user_by_id"></include>
        where
        <if test="id!=null">
            id=#{id}
        </if>
        <if  test="username!=null">
            username=#{username}
        </if>
    </select>

    <!-- 当性别为空时，按用户名去查，否则按照用户名或者性别去查，即实现or的关系  -->
    <select id="queryUsers" resultType="User">
        <include refid="query_user_by_id"></include>
        <where>
            <if  test="username!=null">
                username=#{username}
            </if>
            <if test="gender!=null">
                or gender=#{gender}
            </if>
        </where>

    </select>

    <select id="queryUserId" resultType="User">
        <include refid="query_user_by_id"></include>
        where id=#{param1}
    </select>
    <select id="queryUserByIdAndUsername" resultType="User">
        <include refid="query_user_by_id"></include>
        where id=#{arg0} and username=#{arg1}
    </select>
    <select id="queryUserByIdAndPasswd" resultType="User">
        select id,username,password,gender,regist_time as resistTime
        from t_user
        where id=#{id} and password=#{password}
    </select>
    <select id="queryUserByMapIdAndPasswd" resultType="User">
        select id,username,password,gender,regist_time as resistTime
        from t_user
        where id=#{id} and password=#{passwd}
    </select>
    <select id="queryUserByUserIdAndPasswd" resultType="User">
        select id,username,password,gender,regist_time as resistTime
        from t_user
        where id=#{id} and password=#{password}
    </select>
    <select id="queryUsersBUsername" resultType="User">
        select id,username,password,gender,regist_time as resistTime
        from t_user
        where username like concat('%', #{name}, '%')
    </select>
    <delete id="deleteUserById" parameterType="int">
        delete from t_user
        where id=#{id}
    </delete>
    <update id="updateUser" parameterType="User">
        update t_user
        set username=#{username},password=#{password},gender=#{gender},regist_time=#{resistTime}
        where id=#{id}
    </update>
    <insert id="insertUser" parameterType="User">
        insert into t_user values(#{id},#{username},#{password},#{gender},#{resistTime})
    </insert>
    <insert id="insertUserReturnKey" parameterType="User">
        <selectKey order="AFTER" resultType="int" keyProperty="id">
            select last_insert_id()
        </selectKey>
        insert into t_user values(#{id},#{username},#{password},#{gender},#{resistTime})
    </insert>
</mapper>